name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: Release

jobs:
  ci-linux:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        build_type: [Debug, Release]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      run: |
        cmake --build build --config ${{ matrix.build_type }} -j$(nproc)

    - name: Test executable
      run: |
        ./build/ddogreen --help
        ./build/ddogreen --version

    - name: Check binary size
      if: matrix.build_type == 'Release'
      run: |
        echo "=== Binary Information ==="
        ls -lh build/ddogreen
        file build/ddogreen
        ldd build/ddogreen || true
        
    - name: Verify hardcoded settings
      run: |
        echo "=== Checking for hardcoded values ==="
        strings build/ddogreen | grep -E "(0\.10|60|/var/log/ddogreen\.log)" || true

  build-script-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Test build script - clean
      run: |
        ./build.sh --clean

    - name: Test build script - debug
      run: |
        ./build.sh --debug

    - name: Test build script - release
      run: |
        ./build.sh --clean
        ./build.sh

    - name: Test build script - package creation
      run: |
        sudo apt-get install -y rpm
        ./build.sh --package

    - name: Verify package creation
      run: |
        echo "=== Created packages ==="
        find build -name "*.deb" -o -name "*.rpm" -o -name "*.tar.gz" | sort
        
        # Show package sizes
        find build -name "*.deb" -o -name "*.rpm" -o -name "*.tar.gz" -exec ls -lh {} \;

  cross-platform-build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure CMake (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=$env:BUILD_TYPE

    - name: Build (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cmake --build build --config $BUILD_TYPE -j$(nproc 2>/dev/null || sysctl -n hw.ncpu)

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: |
        cmake --build build --config $env:BUILD_TYPE

    - name: Test executable (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        ./build/ddogreen --help
        ./build/ddogreen --version

    - name: Test executable (Windows)
      if: runner.os == 'Windows'
      run: |
        ./build/$env:BUILD_TYPE/ddogreen.exe --help
        ./build/$env:BUILD_TYPE/ddogreen.exe --version
