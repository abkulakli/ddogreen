name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.2.1)'
        required: true
        type: string

env:
  BUILD_TYPE: Release

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install packaging dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake rpm dpkg-dev

    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      run: |
        cmake --build build --config $BUILD_TYPE -j$(nproc)

    - name: Verify build
      run: |
        echo "=== Binary Information ==="
        ls -lh build/ddogreen
        file build/ddogreen
        ./build/ddogreen --version
        
        echo "=== Dependencies ==="
        ldd build/ddogreen

    - name: Create packages
      run: |
        cd build
        echo "Creating DEB package..."
        cpack -G DEB
        
        echo "Creating RPM package..."
        cpack -G RPM
        
        echo "Creating TGZ package..."
        cpack -G TGZ

    - name: Package information
      run: |
        echo "=== Created Packages ==="
        find build -name "*.deb" -o -name "*.rpm" -o -name "*.tar.gz" -exec ls -lh {} \;
        
        echo "=== DEB Package Contents ==="
        dpkg-deb -c build/*.deb | head -10
        
        echo "=== DEB Package Info ==="
        dpkg-deb -I build/*.deb | grep -E "(Package|Version|Architecture|Description|Depends)"
        
        echo "=== RPM Package Info ==="
        rpm -qip build/*.rpm | head -20

    - name: Test TGZ package structure
      run: |
        cd /tmp
        tar -xzf $GITHUB_WORKSPACE/build/*.tar.gz
        echo "=== TGZ Package Contents ==="
        find ddogreen-* -type f | sort
        
        # Test that install.sh exists and is executable
        test -x ddogreen-*/install.sh
        echo "install.sh found and is executable"

    - name: Create release artifacts
      run: |
        mkdir -p release-artifacts
        
        # Copy packages
        cp build/*.deb release-artifacts/
        cp build/*.rpm release-artifacts/
        cp build/*.tar.gz release-artifacts/
        
        # Copy standalone binary
        cp build/ddogreen release-artifacts/ddogreen-linux-x64
        
        # Create checksums
        cd release-artifacts
        sha256sum * > checksums.txt
        
        echo "=== Release Artifacts ==="
        ls -lah

    - name: Upload to release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release-artifacts/*
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: ddogreen ${{ github.event.inputs.version || github.ref_name }}
        body: |
          ## ddogreen ${{ github.event.inputs.version || github.ref_name }}
          
          ### Installation Options
          
          #### Debian/Ubuntu (DEB Package)
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.version || github.ref_name }}/ddogreen-*-Linux.deb
          sudo dpkg -i ddogreen-*-Linux.deb
          sudo apt install -f  # Fix dependencies if needed
          ```
          
          #### RHEL/CentOS/Fedora (RPM Package)
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.version || github.ref_name }}/ddogreen-*-Linux.rpm
          sudo rpm -i ddogreen-*-Linux.rpm
          # or: sudo dnf install ddogreen-*-Linux.rpm
          ```
          
          #### Generic Linux (TGZ Package)
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.version || github.ref_name }}/ddogreen-*-Linux.tar.gz
          tar -xzf ddogreen-*-Linux.tar.gz
          cd ddogreen-*/
          sudo ./install.sh --install
          ```
          
          #### Standalone Binary
          ```bash
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.version || github.ref_name }}/ddogreen-linux-x64
          chmod +x ddogreen-linux-x64
          sudo ./ddogreen-linux-x64 --help
          ```
          
          ### Requirements
          - Linux with systemd
          - TLP installed (`sudo apt install tlp` / `sudo dnf install tlp`)
          - Root privileges for installation
          
          ### Service Management
          ```bash
          sudo systemctl status ddogreen      # Check status
          sudo systemctl stop ddogreen       # Stop service
          sudo systemctl start ddogreen      # Start service
          sudo journalctl -u ddogreen -f     # View logs
          ```
          
          ### Verify Installation
          All packages automatically install and start the service. The service will manage your system's power automatically with no configuration required.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  test-packages:
    needs: build-and-package
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test: [deb-install, tgz-install]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download release artifacts
      uses: actions/download-artifact@v4
      continue-on-error: true

    - name: Install TLP
      run: |
        sudo apt-get update
        sudo apt-get install -y tlp

    - name: Test DEB package
      if: matrix.test == 'deb-install'
      run: |
        # Get the DEB package from the release
        wget -q https://github.com/${{ github.repository }}/releases/latest/download/ddogreen-*-Linux.deb || echo "Package not yet available"
        
        # Test installation if package exists
        if ls *.deb 1> /dev/null 2>&1; then
          sudo dpkg -i *.deb || sudo apt-get install -f -y
          ddogreen --version
          sudo systemctl status ddogreen --no-pager || true
          sudo apt-get remove -y ddogreen
        fi

    - name: Test TGZ package
      if: matrix.test == 'tgz-install'
      run: |
        # Get the TGZ package from the release
        wget -q https://github.com/${{ github.repository }}/releases/latest/download/ddogreen-*-Linux.tar.gz || echo "Package not yet available"
        
        # Test installation if package exists
        if ls *.tar.gz 1> /dev/null 2>&1; then
          tar -xzf *.tar.gz
          cd ddogreen-*/
          sudo ./install.sh --install
          ddogreen --version
          sudo systemctl status ddogreen --no-pager || true
          sudo ./install.sh --uninstall
        fi
